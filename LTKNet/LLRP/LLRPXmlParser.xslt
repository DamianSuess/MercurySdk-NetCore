<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
  xmlns:llrp="http://www.llrp.org/ltk/schema/core/encoding/binary/1.0">
  <xsl:output omit-xml-declaration='yes' method='text' indent='yes'/>
  <xsl:template match="/llrp:llrpdef">
    /*
    ***************************************************************************
    *  Copyright 2007 Impinj, Inc.
    *
    *  Licensed under the Apache License, Version 2.0 (the "License");
    *  you may not use this file except in compliance with the License.
    *  You may obtain a copy of the License at
    *
    *      http://www.apache.org/licenses/LICENSE-2.0
    *
    *  Unless required by applicable law or agreed to in writing, software
    *  distributed under the License is distributed on an "AS IS" BASIS,
    *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    *  See the License for the specific language governing permissions and
    *  limitations under the License.
    *
    ***************************************************************************
    */


    /*
    ***************************************************************************
    *
    *  This code is generated by Impinj LLRP .Net generator. Modification is not
    *  recommended.
    *
    ***************************************************************************
    */

    /*
    ***************************************************************************
    * File Name:       LLRPXmlParser.cs
    *
    * Version:         1.0
    * Author:          Impinj
    * Organization:    Impinj
    * Date:            Jan. 18, 2008
    *
    * Description:     This file contains general XML parser for LLRP messages
    ***************************************************************************
    */

    using System;
    using System.IO;
    using System.Text;
    using System.Collections;
    using System.ComponentModel;
    using System.Xml;
    using System.Xml.Serialization;
    using System.Xml.Schema;
    using System.Runtime.InteropServices;

    using Org.LLRP.LTK.LLRPV1;
    using Org.LLRP.LTK.LLRPV1.DataType;
    
    namespace Org.LLRP.LTK.LLRPV1
    {
    /// <xsl:text disable-output-escaping="yes">&lt;</xsl:text>summary<xsl:text disable-output-escaping="yes">&gt;</xsl:text>
    /// LLRP XML Parser
    /// <xsl:text disable-output-escaping="yes">&lt;</xsl:text>/summary<xsl:text disable-output-escaping="yes">&gt;</xsl:text>
    public class LLRPXmlParser
    {

    /// <xsl:text disable-output-escaping="yes">&lt;</xsl:text>summary<xsl:text disable-output-escaping="yes">&gt;</xsl:text>
    /// Parse XML string to LLRP message
    /// <xsl:text disable-output-escaping="yes">&lt;</xsl:text>/summary<xsl:text disable-output-escaping="yes">&gt;</xsl:text>
    /// <xsl:text disable-output-escaping="yes">&lt;</xsl:text>param name="xmlstr"<xsl:text disable-output-escaping="yes">&gt;</xsl:text>XML string to be parsed.<xsl:text disable-output-escaping="yes">&lt;</xsl:text>/param<xsl:text disable-output-escaping="yes">&gt;</xsl:text>
    /// <xsl:text disable-output-escaping="yes">&lt;</xsl:text>param name="msg"<xsl:text disable-output-escaping="yes">&gt;</xsl:text>LLRP message. output<xsl:text disable-output-escaping="yes">&lt;</xsl:text>/param<xsl:text disable-output-escaping="yes">&gt;</xsl:text>
    /// <xsl:text disable-output-escaping="yes">&lt;</xsl:text>param name="type"<xsl:text disable-output-escaping="yes">&gt;</xsl:text>LLRP message type. output<xsl:text disable-output-escaping="yes">&lt;</xsl:text>/param<xsl:text disable-output-escaping="yes">&gt;</xsl:text>
    public static void ParseXMLToLLRPMessage(string xmlstr, out Message msg, out ENUM_LLRP_MSG_TYPE type)
    {
    XmlDocument xdoc = new XmlDocument();
    xdoc.LoadXml(xmlstr);
    XmlNode node = (XmlNode)xdoc.DocumentElement;

    switch(node.Name)
    {
    <xsl:for-each select="llrp:messageDefinition">
    case "<xsl:value-of select="@name"/>":
        msg = (Message)MSG_<xsl:value-of select="@name"/>.FromString(xmlstr);
        type = ENUM_LLRP_MSG_TYPE.<xsl:value-of select="@name"/>;
        return;
    </xsl:for-each>
    default:
        type = 0;
        msg = (Message)CustomMsgDecodeFactory.DecodeXmlNodeToCustomMessage(node, xmlstr);
        if (null != msg)
        {
            type = ENUM_LLRP_MSG_TYPE.CUSTOM_MESSAGE;
        }
        return;      
    }
    }
  }
  }
  </xsl:template>
</xsl:stylesheet>