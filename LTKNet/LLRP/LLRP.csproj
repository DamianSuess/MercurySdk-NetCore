<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <OutputType>Library</OutputType>
    <RootNamespace>Org.LLRP.LTK.LLRPV1</RootNamespace>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>Properties\llrp.snk</AssemblyOriginatorKeyFile>
    <DelaySign>false</DelaySign>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <WarningLevel>1</WarningLevel>
    <DocumentationFile></DocumentationFile>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <WarningLevel>1</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Compile Update="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <None Include="keyAccessSpecs.cd" />
    <None Include="KeyClientClasses.cd" />
    <None Include="keyMessages.cd" />
    <None Include="keyRoSpecParameters.cd" />
    <None Update="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Content Include="llrp-1x0-def.xml" />
    <Content Include="LLRPVendorNameSpace.xslt" />
    <Content Include="templates.xslt" />
    <Content Include="VendorExt.xml" />
    <Content Include="VendorExt.xslt" />
  </ItemGroup>
  
  <ItemGroup>
    <Generate Include="LLRPParam.xslt" />
    <Generate Include="LLRPMsg.xslt" />
    <Generate Include="LLRPXmlParser.xslt" />
    <Generate Include="LLRPEnum.xslt" />
    <Generate Include="LLRPEndPoint.xslt" />
    <Generate Include="LLRPClient.xslt" />
    <Generate Include="LLRPNamespace.xslt" />
    <Generate Include="LLRPBinaryDecoder.xslt" />
  </ItemGroup>
  
  <ItemGroup>
    <PackageReference Include="System.Configuration.ConfigurationManager" Version="5.0.0" IsImplicitlyDefined="true" />
  </ItemGroup>

  <!-- https://docs.microsoft.com/en-us/visualstudio/msbuild/how-to-extend-the-visual-studio-build-process?view=vs-2022#example-builddependson-and-cleandependson -->
  <PropertyGroup>
    <CleanDependsOn>
      $(CleanDependsOn);
      CleanGeneratedCode;
    </CleanDependsOn>
    <RunAnalyzersDuringLiveAnalysis>True</RunAnalyzersDuringLiveAnalysis>
    <RunAnalyzersDuringBuild>True</RunAnalyzersDuringBuild>
  </PropertyGroup>

  <Target Name="CleanGeneratedCode">
    <Message Text="Cleaning generated files..." Importance="high" />
    <Delete Files="@(Generate -> '%(filename).cs')" />
  </Target>

  <Target Name="AfterBuild">
    <!--
    This will never be executed: https://github.com/dotnet/msbuild/issues/1680
    -->
  </Target>

  <!--
    REFERENCES:
    - https://docs.microsoft.com/en-us/visualstudio/msbuild/target-build-order?view=vs-2022
    - ".NET Core SDK is not bringing forward 'BeforeBuild'. Must use, BeforeTargets" https://github.com/dotnet/sdk/issues/7811
  -->
  <Target Name="SampleBeforeBuild" BeforeTargets="Build">
    <!--
      HINT: Because Inputs/Outputs are compared and Outputs must have one ore more files missing,
      it may be best to delete all of Outputs' "@(Generate-'%(filename).cs')" files first.
    -->
    <Message Text="Sample Before Build..." Importance="high" />
    <Message Text="INPUTS: @(Generate); templates.xslt" Importance="high" />
    <Message Text="OUTPUTS: @(Generate -> '%(filename).cs')" Importance="high" />
  </Target>
  
  <UsingTask TaskName="CodeGenerator.LLRPCodeGenerator" AssemblyFile="$(MSBuildProjectDirectory)\..\CodeGenerator\bin\$(Configuration)\CodeGenerator.dll" />
  <Target Name="GenerateFromXsltBeforeBuild"
          BeforeTargets="Build"
          Inputs="@(Generate); templates.xslt"
          Outputs="@(Generate -> '%(filename).cs')">

    <Message Text="Generating code from XSLT..." Importance="high" />
    
    <CodeGenerator.LLRPCodeGenerator LLRP_XML_FILE="llrp-1x0-def.xml"
                                     XSLT_FILE="@(Generate)"
                                     OUTPUT_CS_FILE="@(Generate -> '%(filename).cs')"
                                     Condition="!Exists('@(Generate -&gt; \'%(filename).cs\')')" />
  </Target>
          
  <!-- OLD METHOD for .NET Framework -->
  <!--
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <UsingTask TaskName="CodeGenerator.LLRPCodeGenerator" AssemblyFile="$(MSBuildProjectDirectory)\..\CodeGenerator\bin\$(Configuration)\CodeGenerator.dll" />
  <Target Name="BeforeBuild" Inputs="@(Generate); templates.xslt" Outputs="@(Generate -> '%(filename).cs')">
    < ! - -<CodeGenerator.LLRPCodeGenerator LLRP_XML_FILE="..\..\Definitions\core\llrp-1x0-def.xml" XSLT_FILE="@(Generate)" OUTPUT_CS_FILE="@(Generate -> '%(filename).cs')" Condition="!Exists('@(Generate -&gt; \'%(filename).cs\')')" /> - - >
    <CodeGenerator.LLRPCodeGenerator LLRP_XML_FILE="llrp-1x0-def.xml" XSLT_FILE="@(Generate)" OUTPUT_CS_FILE="@(Generate -> '%(filename).cs')" Condition="!Exists('@(Generate -> \'%(filename).cs\')')" />
  </Target>
  -->
</Project>
